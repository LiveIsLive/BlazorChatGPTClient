@page "/FineTunes";

@inject ColdShineSoft.Services.FineTunesService FineTunesService;
@inject ColdShineSoft.Services.FilesService FilesService;
@inject ColdShineSoft.Services.LoginService LoginService;

<PageTitle>Fine-tunes</PageTitle>

<MasterPage>
	<Setting>
		<MudExpansionPanels MultiExpansion="true">
			<MudExpansionPanel Text="Fine-tunes">
				<MudNumericField @bind-Value="FineTunesService.BatchSize" Placeholder="BatchSize" />
				<StringList List="FineTunesService.ClassificationBetas" Text="ClassificationBetas" />
				<MudNumericField @bind-Value="FineTunesService.ClassificationNClasses" Placeholder="ClassificationNClasses" />
				<MudTextField @bind-Value="FineTunesService.ClassificationPositiveClass" Placeholder="ClassificationPositiveClass" />
				<MudCheckBox @bind-Checked="FineTunesService.ComputeClassificationMetrics" TriState="true">ComputeClassificationMetrics</MudCheckBox>
				<MudNumericField @bind-Value="FineTunesService.LearningRateMultiplier" Placeholder="LearningRateMultiplier" />
				<MudNumericField @bind-Value="FineTunesService.NEpochs" Placeholder="NEpochs" />
				<MudNumericField @bind-Value="FineTunesService.PromptLossWeight" Placeholder="PromptLossWeight" />
				<MudTextField @bind-Value="FineTunesService.Suffix" Placeholder="Suffix" />
				<MudTextField @bind-Value="FineTunesService.ValidationFile" Placeholder="ValidationFile" />
			</MudExpansionPanel>
			<MudExpansionPanel Text="Completions">
				<MudSelect @bind-Value="FineTunesService.CompletionsService.Model" Placeholder="Model">
					<MudSelectItem T="string" />
					@foreach(KeyValuePair<string,string> model in this.FineTunesService.CompletionsService.ChatModels)
					{
						<MudSelectItem Value="model.Value">@model.Key</MudSelectItem>
					}
				</MudSelect>
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.Temperature" Placeholder="Temperature" Min="0" Max="2" />
				<MudTextField @bind-Value="FineTunesService.CompletionsService.User" Placeholder="User" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.ChoiceCount" Placeholder="答案数量" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.FrequencyPenalty" Placeholder="FrequencyPenalty" Min="-0.2F" Max="0.2F" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.MaxTokens" Placeholder="MaxTokens" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.PresencePenalty" Placeholder="PresencePenalty" Min="-0.2F" Max="0.2F" />
				<MudTextField @bind-Value="FineTunesService.CompletionsService.Stop" Placeholder="Stop" />
				<StringList List="FineTunesService.CompletionsService.StopAsList" Text="StopAsList" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.TopP" Placeholder="TopP" />

				<MudNumericField @bind-Value="FineTunesService.CompletionsService.BestOf" Placeholder="BestOf" />
				<MudCheckBox @bind-Checked="FineTunesService.CompletionsService.Echo" TriState="true">Echo</MudCheckBox>
				<DictionaryEditor Dictionary="FineTunesService.CompletionsService.LogitBias" Text="LogitBias" />
				<MudNumericField @bind-Value="FineTunesService.CompletionsService.LogProbs" Placeholder="LogProbs" />
				<StringList List="FineTunesService.CompletionsService.PromptAsList" Text="PromptAsList" />
				<MudTextField @bind-Value="FineTunesService.CompletionsService.Suffix" Placeholder="Suffix" />
			</MudExpansionPanel>
		</MudExpansionPanels>
	</Setting>
	<Body>
		<div class="d-flex flex-column" style="height:100%">
			<MessageList Messages="FineTunesService.Messages" />
			<MudProgressLinear Indeterminate="Loading" />
			<EditForm Model="this" Class="mb-2 d-md-flex d-lg-flex d-xl-flex d-xxl-flex" OnValidSubmit="Send">
				<DataAnnotationsValidator />
				<MudTextField @bind-Value="Prompt" For="()=>this.Prompt" Placeholder="Prompt" Class="flex-2 ml-2" Disabled="@Loading" />
				<div class="d-flex flex-1">
					<MudSelect @bind-Value="FileId" Placeholder="File" For="()=>this.FileId" Disabled="@Loading">
						@foreach(OpenAI.GPT3.ObjectModels.SharedModels.FileResponse file in this.FilesService.UploadedFiles)
						{
							<MudSelectItem Value="file.Id">@file.FileName</MudSelectItem>
						}
					</MudSelect>
					<MudIconButton ButtonType="ButtonType.Submit" Color="Color.Primary" Icon="@Icons.Material.Filled.Send" Disabled="@Loading" />
				</div>
			</EditForm>
		</div>
	</Body>
</MasterPage>

@code
{
	bool Loading;

	[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "必须选择文件")]
	public string FileId
	{
		get
		{
			return this.FineTunesService.FileId;
		}
		set
		{
			this.FineTunesService.FileId = value;
		}
	}

	[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "必须输入内容")]
	public string Prompt
	{
		get
		{
			return this.FineTunesService.Prompt;
		}
		set
		{
			this.FineTunesService.Prompt = value;
		}
	}

	protected override async Task OnInitializedAsync()
	{
		this.FineTunesService.MessageAdded = () => this.StateHasChanged();
		this.Loading = true;
		await this.FilesService.ListFile();
		this.Loading = false;
		await base.OnInitializedAsync();
	}

	public async Task<bool> Send()
	{
		this.Loading = true;
		try
		{
			return await this.FineTunesService.Send();
		}
		finally
		{
			this.Loading = false;
			this.StateHasChanged();
		}
	}

	protected override void OnInitialized()
	{
		if (this.FineTunesService.CompletionsService.User == null)
			this.FineTunesService.CompletionsService.User = this.LoginService.LoginUser?.UserName;
		base.OnInitialized();
	}
}