@page "/ChatGPT";


@inject ColdShineSoft.Services.ChatGPTService ChatService;

<PageTitle>ChatGPT</PageTitle>

<MasterPage>
	<Setting>
		<MudSelect @bind-Value="ChatService.Model" Placeholder="Model">
			<MudSelectItem T="string" />
			@foreach(KeyValuePair<string,string> model in this.ChatService.ChatModels)
			{
				<MudSelectItem Value="model.Value">@model.Key</MudSelectItem>
			}
		</MudSelect>
		<MudNumericField @bind-Value="ChatService.Temperature" Placeholder="Temperature" Min="0" Max="2" />
		<MudTextField @bind-Value="ChatService.User" Placeholder="User" />
		<MudNumericField @bind-Value="ChatService.ChoiceCount" Placeholder="答案数量" />
		<MudNumericField @bind-Value="ChatService.FrequencyPenalty" Placeholder="FrequencyPenalty" Min="-0.2F" Max="0.2F" />
		<MudNumericField @bind-Value="ChatService.MaxTokens" Placeholder="MaxTokens" />
		<MudNumericField @bind-Value="ChatService.PresencePenalty" Placeholder="PresencePenalty" Min="-0.2F" Max="0.2F" />
		<MudTextField @bind-Value="ChatService.Stop" Placeholder="Stop" />
		<StringList List="ChatService.StopAsList" Text="StopAsList" />
		<MudNumericField @bind-Value="ChatService.TopP" Placeholder="TopP" />
	</Setting>
	<Body>
		<div class="d-flex flex-column" style="height:100%">
			<MessageList Messages="@ChatService.Messages" />
			<MudProgressLinear Indeterminate="@Loading" />
			<EditForm Model="@ChatService.EditingMessages" OnValidSubmit="Send">
				<ObjectGraphDataAnnotationsValidator />
				<MudDropContainer @ref="DropContainer" T="ColdShineSoft.Models.Message" Items="ChatService.EditingMessages" ItemsSelector="(item,index)=>true" ItemDropped="MoveMessage">
					<ChildContent>
						<MudDropZone T="ColdShineSoft.Models.Message" AllowReorder="true" Identifier="0" ItemIsDisabled="(v)=>!this.AllowGrag" />
					</ChildContent>
					<ItemRenderer Context="message">
						<div class="d-flex">
							<div style="width:100px">
								<MudSelect @bind-Value="message.Role">
									@foreach(ColdShineSoft.Models.Role role in this.ChatService.ChatRoles)
									{
										<MudSelectItem Value="role" />
									}
								</MudSelect>
							</div>
							<MudTextField @bind-Value="message.Content" Class="flex-1 ml-2" For="@(()=>message.Content)" Disabled="@Loading" />
							@if(message==this.ChatService.EditingMessages[0])
							{
								<MudIconButton OnClick="AddMessage" Icon="@Icons.Material.Filled.Add" Color="Color.Primary"></MudIconButton>
							}
							else
							{
								<MudIconButton OnClick="()=>this.RemoveMessage(message)" Icon="@Icons.Material.Filled.Delete"></MudIconButton>
							}
						</div>
					</ItemRenderer>
				</MudDropContainer>
				<div class="d-flex">
					<MudCheckBox @bind-Checked="AllowGrag" Class="align-self-center">拖动调整顺序</MudCheckBox>
					<div class="flex-1"></div>
					<MudIconButton ButtonType="ButtonType.Submit" Color="Color.Primary" Icon="@Icons.Material.Filled.Send" Disabled="@Loading" />
				</div>
			</EditForm>
		</div>
	</Body>
</MasterPage>

@code
{
	bool Loading;

	bool AllowGrag;

	protected MudDropContainer<ColdShineSoft.Models.Message> DropContainer=null!;

	ColdShineSoft.Models.Message[] VirtualItems { get; } = new ColdShineSoft.Models.Message[]{new ColdShineSoft.Models.Message()};

	public async void Send()
	{
		this.Loading = true;
		await this.ChatService.Send();
		this.Loading = false;
		this.StateHasChanged();
	}

	void MoveMessage(MudItemDropInfo<ColdShineSoft.Models.Message> dropItem)
	{
		this.ChatService.EditingMessages.Move(this.ChatService.EditingMessages.IndexOf(dropItem.Item), dropItem.IndexInZone);
	}

	void RemoveMessage(ColdShineSoft.Models.Message message)
	{
		this.ChatService.EditingMessages.Remove(message);
		this.DropContainer.Refresh();
	}

	void AddMessage()
	{
		this.ChatService.EditingMessages.Add(new ColdShineSoft.Models.Message { Role = ColdShineSoft.Models.Role.User});
		this.DropContainer.Refresh();
	}
}